import { ChainId, TradeType } from '@kinetix/sdk-core'
import { CacheMode } from '@kinetix/smart-order-router'
import { CachedRoutesStrategy } from './model/cached-routes-strategy'
import { PairTradeTypeChainId } from './model/pair-trade-type-chain-id'
import { CachedRoutesBucket } from './model/cached-routes-bucket'

/**
 * This is the main configuration for the caching strategies of routes.
 *
 * The keys are generated by calling the `toString` method in the `PairTradeTypeChainId` class,
 * this way we can guarantee the correct format of the key.
 *
 * The values are an object of type `CachedRoutesStrategy`.
 * which receive an array of `CachedRoutesParameters` with the configuration of the buckets.
 */
export const CACHED_ROUTES_CONFIGURATION: Map<string, CachedRoutesStrategy> = new Map([
  /**
   * WKAVA/USDt - KAVA
   */
  [
    new PairTradeTypeChainId({
      tokenIn: '0xc86c7C0eFbd6A49B35E8714C5f59D99De09A225b', // WKAVA
      tokenOut: '0x919C1c267BC06a7039e03fcc2eF738525769109c', // USDt
      tradeType: TradeType.EXACT_INPUT,
      chainId: ChainId.KAVA,
    }).toString(),
    new CachedRoutesStrategy({
      pair: 'WKAVA/USDt',
      tradeType: TradeType.EXACT_INPUT,
      chainId: ChainId.KAVA,
      buckets: [
        new CachedRoutesBucket({ bucket: 0.2, cacheMode: CacheMode.Livemode }),
        new CachedRoutesBucket({ bucket: 1, cacheMode: CacheMode.Livemode }),
        new CachedRoutesBucket({ bucket: 3, cacheMode: CacheMode.Livemode }),
        new CachedRoutesBucket({ bucket: 5, cacheMode: CacheMode.Livemode }),
        new CachedRoutesBucket({ bucket: 8, cacheMode: CacheMode.Livemode }),
        new CachedRoutesBucket({ bucket: 13, cacheMode: CacheMode.Livemode }),
        new CachedRoutesBucket({ bucket: 21, cacheMode: CacheMode.Livemode }),
        new CachedRoutesBucket({ bucket: 34, cacheMode: CacheMode.Livemode }),
        new CachedRoutesBucket({ bucket: 55, cacheMode: CacheMode.Livemode }),
      ],
    }),
  ],
  [
    new PairTradeTypeChainId({
      tokenIn: '0xc86c7C0eFbd6A49B35E8714C5f59D99De09A225b', // WKAVA
      tokenOut: '*', // ANY TOKEN
      tradeType: TradeType.EXACT_INPUT,
      chainId: ChainId.KAVA,
    }).toString(),
    new CachedRoutesStrategy({
      pair: 'WKAVA/*',
      tradeType: TradeType.EXACT_INPUT,
      chainId: ChainId.KAVA,
      buckets: [
        new CachedRoutesBucket({ bucket: 100, cacheMode: CacheMode.Darkmode, withLastNCachedRoutes: 10 }),
        new CachedRoutesBucket({ bucket: 300, cacheMode: CacheMode.Livemode, withLastNCachedRoutes: 10 }),
        new CachedRoutesBucket({ bucket: 500, cacheMode: CacheMode.Livemode, withLastNCachedRoutes: 10 }),
        new CachedRoutesBucket({ bucket: 750, cacheMode: CacheMode.Livemode, withLastNCachedRoutes: 10 }),
        new CachedRoutesBucket({ bucket: 1_000, cacheMode: CacheMode.Livemode, withLastNCachedRoutes: 10 }),
        new CachedRoutesBucket({ bucket: 3_000, cacheMode: CacheMode.Livemode, withLastNCachedRoutes: 10 }),
        new CachedRoutesBucket({ bucket: 8_000, cacheMode: CacheMode.Livemode, withLastNCachedRoutes: 10 }),
        new CachedRoutesBucket({ bucket: 13_000, cacheMode: CacheMode.Livemode, withLastNCachedRoutes: 10 }),
      ],
    }),
  ],
  [
    new PairTradeTypeChainId({
      tokenIn: '0x919C1c267BC06a7039e03fcc2eF738525769109c', // USDt
      tokenOut: '*', // ANY TOKEN
      tradeType: TradeType.EXACT_INPUT,
      chainId: ChainId.KAVA,
    }).toString(),
    new CachedRoutesStrategy({
      pair: 'USDt/*',
      tradeType: TradeType.EXACT_INPUT,
      chainId: ChainId.KAVA,
      buckets: [
        new CachedRoutesBucket({ bucket: 100, cacheMode: CacheMode.Darkmode, withLastNCachedRoutes: 10 }),
        new CachedRoutesBucket({ bucket: 300, cacheMode: CacheMode.Livemode, withLastNCachedRoutes: 10 }),
        new CachedRoutesBucket({ bucket: 500, cacheMode: CacheMode.Livemode, withLastNCachedRoutes: 10 }),
        new CachedRoutesBucket({ bucket: 750, cacheMode: CacheMode.Livemode, withLastNCachedRoutes: 10 }),
        new CachedRoutesBucket({ bucket: 1_000, cacheMode: CacheMode.Livemode, withLastNCachedRoutes: 10 }),
        new CachedRoutesBucket({ bucket: 3_000, cacheMode: CacheMode.Livemode, withLastNCachedRoutes: 10 }),
        new CachedRoutesBucket({ bucket: 8_000, cacheMode: CacheMode.Livemode, withLastNCachedRoutes: 10 }),
        new CachedRoutesBucket({ bucket: 13_000, cacheMode: CacheMode.Livemode, withLastNCachedRoutes: 10 }),
      ],
    }),
  ],
  /**
   * NOTE: Only Cache configuration for Pricing below this comment
   * These configurations are influenced by the frontend configuration:
   * https://github.com/Uniswap/interface/blob/main/src/hooks/useUSDPrice.ts#L15
   */

])
